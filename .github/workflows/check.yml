on:
  pull_request:

  push:

  schedule:
    - cron: "0 12 * * 0"

name: Check

jobs:
  pre-commit:
    name: Run pre-commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0

  test-run:
    name: Test VKMS
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install VKMS
        run: pip install .
      - name: Run VKMS
        run: |
          vkms -i ${{ secrets.VKMS_INCLUDE }} dump --token ${{ secrets.VKMS_ACCESS_TOKEN }} --export-json
          vkms -i ${{ secrets.VKMS_INCLUDE }} parse -f txt
          vkms -i ${{ secrets.VKMS_INCLUDE }} parse -f html
          vkms -i ${{ secrets.VKMS_INCLUDE }} atch
      - name: Zip artifacts with password
        run: |
          zip -r result.zip vkms-result/ 1>/dev/null
          zip -P '${{ secrets.ZIP_PASSWORD }}' enc_result.zip result.zip
      - name: Send artifacts to Telegram
        run: |
          curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument" \
            --form-string "chat_id=${{ secrets.TELEGRAM_TO }}" \
            --form-string "disable_web_page_preview=true" \
            --form-string "parse_mode=html" \
            --form-string "caption=<i> VKMS Result </i> | Build finished on <b> $(TZ='Europe/Moscow' date) </b>" \
            -F document=@"enc_result.zip"
      - name: Clear artifacts
        run: rm -rf vkms-result/ result.zip enc_result.zip

  stats-run:
    name: Collect VKMS run statistics
    if: github.actor != 'dependabot[bot]'
    needs: [pre-commit, test-run]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install VKMS
        run: pip install .
      - name: Run VKMS
        run: |
          TIME='%e' /bin/time vkms -i c21 -o vkms-result-stats dump --token ${{ secrets.VKMS_ACCESS_TOKEN }} -t 4 2> time.txt
          sqlite3 vkms-result-stats/.sqlite/2000000021.sqlite -batch 'select count() from messages;' > count.txt
          printf 'VKMS_SPEED=%.f\n' $(echo $(<count.txt)'/'$(<time.txt) | bc) >> $GITHUB_ENV
      - name: Update speed badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GH_API_TOKEN }}
          gistID: bf106ade592cbea6189b89f71c7545e9
          filename: vkms-speed.json
          label: speed
          message: ~${{ env.VKMS_SPEED }} m/s
          color: success
          style: flat-square
      - name: Clear artifacts
        run: rm -rf vkms-result-stats
